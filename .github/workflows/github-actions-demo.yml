name: GitHub Actions Demo
on:
  push:
    branches:
      - "*"
  pull_request:
    types: [labeled]
    branches:
      - "*"
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
        type: string

env:
  SERVING_IMAGE: oneflow-serving
  TRITON_VERSION: "21.10"
  DOCKER_IMAGE: "oneflow-serving:${{ github.event.inputs.tag }}"
  REGION_ID: cn-beijing
  REGISTRY: registry.cn-beijing.aliyuncs.com
  NAMESPACE: oneflow

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  long_job:
    runs-on: ubuntu-latest
    env:
      IMAGE: triton-devel
    steps:
      - name: sleep
        run: |
          echo "triton_version=${{ env.TRITON_VERSION }}" >> $GITHUB_ENV
          echo ${{ env.TRITON_VERSION }}
          echo ${{ env.DOCKER_IMAGE }}
      - run: echo '1'
      - run: echo '2'
      - run: echo '3'
      - run: echo '4'
      - run: env
      - run: echo ${{ github.ref_name }}
      - name: Export docker image name
        run: |
          set -x
          if [[ "${{ github.event_name }}" == "release" ]]
          then
            echo "image_tag=${{ env.SERVING_IMAGE }}:${{ github.ref_name }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]
          then
            echo "image_tag=${{ env.SERVING_IMAGE }}:${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo "image_tag=${{ env.SERVING_IMAGE }}:nightly" >> $GITHUB_ENV
          else
            echo "image_tag=${{ env.SERVING_IMAGE }}:run-id-${{ github.run_id }}" >> $GITHUB_ENV
          fi
      - name: Export acr docker image name
        run: |
          echo "acr_image_tag=${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.image_tag }}" >> $GITHUB_ENV
      - name: show env image tag
        run: |
          echo ${{ env.image_tag }}
          echo ${{ env.acr_image_tag }}

  job1:
    runs-on: ubuntu-latest
    needs: [long_job]
    env:
      IMAGE: triton-devel
    steps:
      - name: show env image tag
        run: |
          echo ${{ env.image_tag }}
          echo ${{ env.acr_image_tag }}
